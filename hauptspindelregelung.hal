# Drehzahlregelung für Hauptspindel

# Spindel-Ein-Signal
#net spindle-enable <= motion.spindle-on
setp spindle-on.in0 5 # Drehzahl ab der die Spindel eingeschaltet wird
net nsoll => spindle-on.in1
net spindle-enable <= spindle-on.out

# Rampenerzeugung aus Sollwertsprüngen
setp spindle-ramp.maxv 500	# Einheit pro Sekunde
net spindle-cmd <= motion.spindle-speed-out => spindle-ramp.in
net nsollsigned <= spindle-ramp.out

# Betrag von Drehzahlsollsignal
net nsollsigned => nsollabs.in
net nsoll <= nsollabs.out
# Spindelrichtungssignal
net spindle-dir <= nsollabs.is-negative
#net spindle-dir <= nsollabs.is-positive

#PID Regler mit Vorsteuerung (ff0)
setp SpindelPID.Pgain 0
setp SpindelPID.Igain 0
setp SpindelPID.Dgain 0
setp SpindelPID.FF0 1
net spindle-enable => SpindelPID.enable
#setp SpindelPID.enable true
net nsoll => SpindelPID.command
net nist => SpindelPID.feedback
net PIDout <= SpindelPID.output

# FU-Kennlinie einbauen
# Tiefer Bereich
setp FCLL.min 0
setp FCLL.max 2230
net PIDout => FCLL.in
net FC1 <= FCLL.out

setp FCLS.gain 0.00044843
net FC1 => FCLS.in
net FC2 <= FCLS.out

setp interpolation-tief.in2 0
setp interpolation-tief.in1 -84.11214953271

net FC2 => interpolation-tief.select
net FC3 <= interpolation-tief.out

# hoher Bereich
setp FCHS.gain 0.00030303
net PIDout => FCHS.in
net FC4 <= FCHS.out

setp interpolation-hoch.in2 0
setp interpolation-hoch.in1 3084.11214953271
net FC4 => interpolation-hoch.select
net FC5 <= interpolation-hoch.out

setp FCSum.gain0 1
setp FCSum.gain1 1
net FC3 => FCSum.in0
net FC5 => FCSum.in1
net SpindlePwmValue <= FCSum.out
